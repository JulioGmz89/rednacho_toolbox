<?xml version = "1.0" encoding = "UTF-8" ?>
<Application xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:RedNachoToolbox"
             xmlns:converters="clr-namespace:RedNachoToolbox.Converters"
             x:Class="RedNachoToolbox.App">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- Base color and style resources -->
                <ResourceDictionary Source="Resources/Styles/Colors.xaml" />
                <ResourceDictionary Source="Resources/Styles/Styles.xaml" />
                <!-- Theme colors are now applied programmatically via SettingsPage.ApplySavedTheme() -->
            </ResourceDictionary.MergedDictionaries>
            
            <!-- Value Converters -->
            <converters:BoolToWidthConverter x:Key="BoolToWidthConverter" />
            <converters:BoolToPaddingConverter x:Key="BoolToPaddingConverter" />
            <converters:BoolToLogoHeightConverter x:Key="BoolToLogoHeightConverter" />
            <converters:InvertedBoolConverter x:Key="InvertedBoolConverter" />
            <converters:ThemeIconConverter x:Key="ThemeIconConverter" />
            
            <!-- Global Font Styles - Inter Font Family -->
            <Style TargetType="Label">
                <Setter Property="FontFamily" Value="InterRegular" />
            </Style>
            
            <Style TargetType="Button">
                <Setter Property="FontFamily" Value="InterMedium" />
            </Style>
            
            <Style TargetType="Entry">
                <Setter Property="FontFamily" Value="InterRegular" />
            </Style>
            
            <Style TargetType="SearchBar">
                <Setter Property="FontFamily" Value="InterRegular" />
            </Style>
            
            <!-- Global Input Container Style: use this Border style to wrap inputs (Entry/Picker)
                 to avoid double borders across the app. -->
            <Style x:Key="InputContainerBorderStyle" TargetType="Border">
                <Setter Property="Background" Value="{DynamicResource InputBackgroundColor}" />
                <Setter Property="Stroke" Value="{DynamicResource InputBorderColor}" />
                <Setter Property="StrokeThickness" Value="0" />
                <Setter Property="Padding" Value="6" />
                <Setter Property="StrokeShape">
                    <Setter.Value>
                        <RoundRectangle CornerRadius="8" />
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Specific Font Weight Styles -->
            <Style x:Key="HeaderStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="InterBold" />
                <Setter Property="TextColor" Value="{DynamicResource TextColor}" />
            </Style>
            
            <Style x:Key="SubHeaderStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="InterSemiBold" />
                <Setter Property="TextColor" Value="{DynamicResource TextColor}" />
            </Style>
            
            <Style x:Key="BodyTextStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="InterRegular" />
                <Setter Property="TextColor" Value="{DynamicResource TextColor}" />
            </Style>
            
            <Style x:Key="SecondaryTextStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="InterRegular" />
                <Setter Property="TextColor" Value="{DynamicResource TextColorSecondary}" />
            </Style>
            
            <Style x:Key="CaptionTextStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="InterLight" />
                <Setter Property="TextColor" Value="{DynamicResource TextColorTertiary}" />
            </Style>
            
            <!-- Tool Card DataTemplate -->
            <DataTemplate x:Key="ToolCardTemplate">
                <Border BackgroundColor="{DynamicResource CardBackgroundColor}"
                        StrokeThickness="0"
                        Padding="12"
                        Margin="0"
                        HeightRequest="120"
                        HorizontalOptions="Fill"
                        VerticalOptions="Fill">
                    <Border.StrokeShape>
                        <RoundRectangle CornerRadius="12"/>
                    </Border.StrokeShape>
                    
                    <!-- Shadow effect for card elevation -->
                    <Border.Shadow>
                        <Shadow Brush="{DynamicResource CardShadowColor}"
                                Offset="0,2"
                                Radius="4"
                                Opacity="0.3"/>
                    </Border.Shadow>
                    
                    <!-- Main content grid with icon and text areas -->
                    <Grid ColumnDefinitions="Auto, *" 
                          ColumnSpacing="12">
                        
                        <!-- Icon area - background box without border -->
                        <Border Grid.Column="0"
                                BackgroundColor="{DynamicResource CardAccentBackgroundColor}"
                                VerticalOptions="Center"
                                HorizontalOptions="Center"
                                WidthRequest="80"
                                HeightRequest="80"
                                StrokeThickness="0">
                            <Border.StrokeShape>
                                <RoundRectangle CornerRadius="8"/>
                            </Border.StrokeShape>
                            
                            <Image Source="{Binding IconPath}"
                                   Aspect="AspectFit"
                                   VerticalOptions="Center"
                                   HorizontalOptions="Center"
                                   WidthRequest="64"
                                   HeightRequest="64">
                                <!-- Fallback for missing icons -->
                                <Image.Triggers>
                                    <DataTrigger TargetType="Image" 
                                                 Binding="{Binding IconPath}" 
                                                 Value="">
                                        <Setter Property="Source" Value="dotnet_bot.png"/>
                                    </DataTrigger>
                                    <DataTrigger TargetType="Image" 
                                                 Binding="{Binding IconPath}" 
                                                 Value="{x:Null}">
                                        <Setter Property="Source" Value="dotnet_bot.png"/>
                                    </DataTrigger>
                                    <!-- Override icon for Markdown to PDF tool: theme-aware card icons -->
                                    <DataTrigger TargetType="Image" 
                                                 Binding="{Binding Name}" 
                                                 Value="Markdown to PDF">
                                        <Setter Property="Source" 
                                                Value="{AppThemeBinding Light=md_to_pdf_lightmode.png, Dark=md_to_pdf_darkmode.png}" />
                                    </DataTrigger>
                                </Image.Triggers>
                            </Image>
                        </Border>
                        
                        <!-- Text content area (72% width) -->
                        <VerticalStackLayout Grid.Column="1" 
                                             VerticalOptions="Center"
                                             Spacing="8">
                            
                            <!-- Tool name -->
                            <Label Text="{Binding Name}"
                                   FontSize="18"
                                   FontFamily="InterSemiBold"
                                   TextColor="{DynamicResource TextColor}"
                                   LineBreakMode="TailTruncation"
                                   MaxLines="1"
                                   VerticalOptions="Start"/>
                            
                            <!-- Tool description -->
                            <Label Text="{Binding Description}"
                                   FontSize="14"
                                   FontFamily="InterRegular"
                                   TextColor="{DynamicResource TextColorSecondary}"
                                   LineBreakMode="WordWrap"
                                   MaxLines="2"
                                   VerticalOptions="Start"/>
                            
                            <!-- Category indicator -->
                            <Label Text="{Binding Category, StringFormat='Category: {0}'}"
                                   FontSize="12"
                                   FontFamily="InterItalic"
                                   TextColor="{DynamicResource TextColorTertiary}"
                                   LineBreakMode="TailTruncation"
                                   MaxLines="1"
                                   VerticalOptions="End"/>
                        </VerticalStackLayout>
                    </Grid>
                    
                    <!-- Visual states for interaction feedback -->
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup Name="CommonStates">
                            <VisualState Name="Normal"/>
                            <VisualState Name="PointerOver">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{DynamicResource HighlightColor}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState Name="Pressed">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{DynamicResource HighlightColor}"/>
                                    <Setter Property="Opacity" Value="0.8"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                </Border>
            </DataTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>
